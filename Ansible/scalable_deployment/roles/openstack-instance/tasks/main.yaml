---
# Install dependencies on the host
- name: Install pip
  become: true
  ansible.builtin.apt:
    name: ["python3-dev", "python3-setuptools", "python3-pip"]
    state: latest
    update_cache: true
  when: ansible_distribution == "Ubuntu"
# sudo apt-get update && sudo apt-get install python3-dev python3-setuptools python-pip

- name: Update pip
  ansible.builtin.pip:
    name: ["pip", "openstacksdk"]
    state: latest
# pip install --upgrade pip && pip install openstacksdk


# Instead of creating new security group, adding predefined sg
- name: Adding security group
  ansible.builtin.set_fact:
    sg_names: "{{ sg_names|default([]) + [ security_group.name ] }}"
  loop: "{{ security_groups }}"
  loop_control:
    loop_var: security_group

# Debugger to ensure correspondent security groups are attached
- ansible.builtin.debug:
    msg: "Security group(s) {{ sg_names }} have been attached."

# Create an instance on NeCTAR
- name: Create an instance
  openstack.cloud.server:
    name: "{{ instance_name }}"
    auto_floating_ip: false
    availability_zone: "{{ availability_zone }}"
    flavor: "{{ instance_flavor }}"
    image: "{{ instance_image }}"
    key_name: "{{ instance_key_name }}"
    security_groups: "{{ sg_names }}"
    timeout: 600
    state: present
    wait: true
  register: os_instance

# Print out ip information
- ansible.builtin.debug:
    msg: "Instance {{ os_instance.server.name }} has been created. IP address is {{ os_instance['server']['addresses']['qh2-uom-internal'][0]['addr'] }}"
  when: os_instance.server is defined

- name: Wait for connection
  ansible.builtin.wait_for:
    host: "{{ os_instance['server']['addresses']['qh2-uom-internal'][0]['addr'] }}"
    port: 22
    timeout: 300
    search_regex: OpenSSH
  when: os_instance.server is defined

- name: Define the database IP
  set_fact:
    instance_ip: "{{ os_instance['server']['addresses']['qh2-uom-internal'][0]['addr'] }}"
  delegate_to: "{{ os_instance['server']['addresses']['qh2-uom-internal'][0]['addr'] }}"
  when: os_instance.server is defined

# Add hosts to Ansible in-memory inventory
- name: Add host
  ansible.builtin.add_host:
    name: "{{ os_instance['server']['addresses']['qh2-uom-internal'][0]['addr'] }}"
    groups: MASTODON_CRAWLER
  when: os_instance.server is defined

# save created instance to txt file
- name: Save the instance name and IP to a file
  lineinfile:
    path: "/Users/taylortang/Life-at-UniMelb/Semester_3/COMP90024_CCC/As2/cloud-computing-project/Code/Ansible/scalable_deployment/deployed_ips/{{ current_date_time }}.txt"
    line: "{{ os_instance.server.name }},{{ os_instance['server']['addresses']['qh2-uom-internal'][0]['addr'] }}"
    create: yes
  delegate_to: localhost
  when: os_instance.server is defined