---
# get self ip
- name: Get the front and back IP from file
  slurp:
    src: "/Users/taylortang/Life-at-UniMelb/Semester_3/COMP90024_CCC/As2/cloud-computing-project/Code/Ansible/full_deployment/tmp/frontback_ip"
  delegate_to: localhost
  register: frontback_ip_file

- name: Convert the front and back IP from base64 to string
  set_fact:
    frontback_ip: "{{ frontback_ip_file.content | b64decode }}"

- debug: 
    msg: "Front and backend IP is set to: {{ frontback_ip }}"

# manipulate a bit
- name: Create base URL from IP
  set_fact:
    backend_url: "http://{{ frontback_ip }}:5000/"
- debug: 
    msg: "Base URL is set to: {{ backend_url }}"

# get couchdb ip
- name: Get the database IP from file
  slurp:
    src: "/Users/taylortang/Life-at-UniMelb/Semester_3/COMP90024_CCC/As2/cloud-computing-project/Code/Ansible/full_deployment/tmp/couchdb_ip"
  delegate_to: localhost
  register: couchdb_ip_file

- name: Convert the database IP from base64 to string
  set_fact:
    couchdb_ip: "{{ couchdb_ip_file.content | b64decode }}"

- debug: 
    msg: "Database IP is set to: {{ couchdb_ip }}"


- name: Gather facts of remote host
  ansible.builtin.setup:
    gather_subset: all

- name: Install dependencies
  tags: always
  become: true
  ansible.builtin.apt:
    name:
      [
        "apt-transport-https",
        "build-essential",
        "ca-certificates",
        "curl",
        "git",
        "gnupg",
        "gnupg-agent",
        "lsb-release",
        "python3-dev",
        "python3-pip",
        "python3-setuptools",
        "snapd",
        "software-properties-common",
        "unzip",
        "vim",
      ]
    state: latest
    install_recommends: false
    update_cache: true

- name: Update pip
  tags: always
  become: true
  ansible.builtin.pip:
    name: ["pip"]
    state: latest
